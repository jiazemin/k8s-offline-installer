global
        daemon
        maxconn 512
        log localhost user info
        spread-checks 10
        tune.ssl.default-dh-param 2048
        #https://wiki.mozilla.org/Security/Server_Side_TLS
        ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-E
        ssl-default-bind-options no-sslv3 no-tls-tickets
        ssl-default-server-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE
        ssl-default-server-options no-sslv3 no-tls-tickets

resolvers dnsserver
        nameserver k8s-internal 10.96.0.10:53
        hold valid 1s

defaults
        #stats enable
        default-server inter 5s fastinter 2s
        log global
        mode http
        option httplog
        timeout connect 5s
        timeout client 1200s
        timeout server 1200s
        timeout tunnel 1h
        
frontend http-redirect
        bind :80
        rspidel ^Server:.*
        rspidel ^Allow:.*
        redirect scheme https if !{ ssl_fc }


frontend https-serve
        bind :443 ssl crt /cert/${CERT_DOMAINS}.pem
        option http-server-close
        option forwardfor

        http-request set-header X-Forwarded-Proto https if { ssl_fc }
        http-request set-header X-Forwarded-Ssl on if { ssl_fc }

        rspidel ^Server:.*
        rspidel ^Allow:.*
        #rspirep ^Location:\ http://(.*)$    Location:\ https://\1
        rspadd  Strict-Transport-Security:\ max-age=15768000

        # foo.
        use_backend be_kube_dash if { hdr_beg(Host) -i kd. -i dash. }
        use_backend be_prom_grafana if { hdr_beg(Host) -i graf. }
        use_backend be_prom_main if { hdr_beg(Host) -i prom. }
        #use_backend be_apps if { hdr_beg(Host) -i apps. }
        use_backend be_kibana if { hdr_beg(Host) -i kibana. }
        #default_backend default

#backend be_apps
#        server be_apps_01  kubeapps.kubeapps.svc.cluster.local:80 check

backend be_kube_dash
        server be_kube_dash_01 kubernetes-dashboard.kube-system.svc.cluster.local:443 resolvers dnsserver ssl check verify none

backend be_prom_grafana
        server be_prom_grafana_01 grafana.kube-monitor.svc.cluster.local:80 resolvers dnsserver check

backend be_prom_main
        server be_prom_main_01 prometheus-server.kube-monitor.svc.cluster.local:80 resolvers dnsserver check

backend be_kibana
#        server be_kibana_01 elk-kibana.kube-elk.svc.cluster.local:5601 resolvers dnsserver check

